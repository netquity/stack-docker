---
version: '3'
services:
  # The environment variable "TAG" is used throughout this file to
  # specify the version of the images to run. The default is set in the
  # '.env' file in this folder. It can be overridden with any normal
  # technique for setting environment variables, for example:
  #
  #   TAG=6.0.0-beta1 docker-compose up
  #
  # REF: https://docs.docker.com/compose/compose-file/#variable-substitution
  #
  # Also be sure to set the ELASTIC_VERSION variable. For released versions,
  # ${TAG} and ${ELASTIC_VERSION} will be identical, but for pre-release
  # versions, ${TAG} might contain an extra build identifier, like
  # "6.0.0-beta1-3eab5b40", so a full invocation might look like:
  #
  #   ELASTIC_VERSION=6.0.0-beta1 TAG=6.0.0-beta1-3eab5b40 docker-compose up
  #
  elasticsearch:
    #image: docker.elastic.co/elasticsearch/elasticsearch:${TAG}
    build:
      context: ./
      dockerfile: elasticsearch-dockerfile
    container_name: elasticsearch
    environment: ['http.host=0.0.0.0', 'transport.host=127.0.0.1', 'ELASTIC_PASSWORD=${ELASTIC_PASSWORD}']
    ports: ['127.0.0.1:9200:9200']
    networks: ['stack']
    volumes:
      - ./config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./certificates/root-ca.pem:/usr/share/elasticsearch/config/root-ca.pem
      - ./certificates/chain-ca.pem:/usr/share/elasticsearch/config/chain-ca.pem
      - ./certificates/CN=IP-127.0.0.1.crtfull.pem:/usr/share/elasticsearch/config/CN=IP-127.0.0.1.crtfull.pem
      - ./certificates/CN=IP-127.0.0.1.key.pem:/usr/share/elasticsearch/config/CN=IP-127.0.0.1.key.pem
      - ./certificates/truststore.jks:/usr/share/elasticsearch/config/truststore.jks
      - ./certificates/CN=IP-127.0.0.1-keystore.jks:/usr/share/elasticsearch/config/CN=IP-127.0.0.1-keystore.jks
      #- ./certificates/root-ca.pem:/usr/share/elasticsearch/plugins/search-guard-6-6.2.3-22.0/tools/root-ca.pem
      #- ./certificates/CN=sgadmin.crtfull.pem:/usr/share/elasticsearch/plugins/search-guard-6-6.2.3-22.0/tools/CN=sgadmin.crtfull.pem
      #- ./certificates/CN=sgadmin.key.pem:/usr/share/elasticsearch/plugins/search-guard-6-6.2.3-22.0/tools/CN=sgadmin.key.pem

  kibana:
    image: docker.elastic.co/kibana/kibana:${TAG}
    #build:
    #  context: ./
    #  dockerfile: kibana-dockerfile
    container_name: kibana
    environment:
      - ELASTICSEARCH_USERNAME=kibana
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - ./config/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports: ['5601:5601']
    networks: ['stack']
    depends_on: ['elasticsearch']

  apm_server:
    image: docker.elastic.co/apm/apm-server:${TAG}
    container_name: apm_server
    ports: ['127.0.0.1:8200:8200']
    networks: ['stack']
    command: -e -E 'apm-server.host=0.0.0.0:8200'
    depends_on: ['elasticsearch','setup_apm_server']

  # Run a short-lived container to set up kibana.
  setup_kibana:
    image: centos:7
    container_name: setup_kibana
    volumes: ['./scripts/setup-kibana.sh:/usr/local/bin/setup-kibana.sh:ro']
    command: ['/bin/bash', '-c', 'cat /usr/local/bin/setup-kibana.sh | tr -d "\r" | bash']
    environment: ['ELASTIC_PASSWORD=${ELASTIC_PASSWORD}']
    networks: ['stack']
    depends_on: ['elasticsearch']

  setup_apm_server:
    image: docker.elastic.co/apm/apm-server:${TAG}
    container_name: setup_apm_server
    volumes: ['./scripts/setup-beat.sh:/usr/local/bin/setup-beat.sh:ro']
    command: ['/bin/bash', '-c', 'cat /usr/local/bin/setup-beat.sh | tr -d "\r" | bash -s apm-server']
    environment: ['ELASTIC_PASSWORD=${ELASTIC_PASSWORD}']
    networks: ['stack']
    depends_on: ['elasticsearch','kibana']

networks: {stack: {}}
